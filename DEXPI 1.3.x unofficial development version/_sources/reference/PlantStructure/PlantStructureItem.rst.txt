==================
PlantStructureItem
==================

Overview
========

.. rubric:: Abstract class

Item of the plant break down structure.

.. image:: PlantStructureItem.*


.. rubric:: Supertypes

* :doc:`ConceptualObject </reference/DexpiModel/ConceptualObject>`

* :doc:`CustomAttributeOwner </reference/Customization/CustomAttributeOwner>`

.. rubric:: Subtypes

* :doc:`Enterprise </reference/PlantStructure/Enterprise>`

* :doc:`IndustrialComplex </reference/PlantStructure/IndustrialComplex>`

* :doc:`PlantArea </reference/PlantStructure/PlantArea>`

* :doc:`PlantSection </reference/PlantStructure/PlantSection>`

* :doc:`PlantSystem </reference/PlantStructure/PlantSystem>`

* :doc:`PlantTrain </reference/PlantStructure/PlantTrain>`

* :doc:`ProcessPlant </reference/PlantStructure/ProcessPlant>`

* :doc:`Site </reference/PlantStructure/Site>`

.. admonition:: proteus

   The class is implemented as a :ref:`Proteus XML element with RDL reference <proteus-concept-xml-element-with-rdl-abstract>`. As :doc:`PlantStructureItem </reference/PlantStructure/PlantStructureItem>` is abstract, there is no RDL reference for the class itself;  the RDL reference depends on the concrete subclass.

   Tag
       ``<PlantStructureItem>``

   ComponentClass
       *depending on subclass*

   ComponentClassURI
       *depending on subclass*

.. admonition:: example

   As :doc:`PlantStructureItem </reference/PlantStructure/PlantStructureItem>` is abstract, we consider :doc:`ProcessPlant </reference/PlantStructure/ProcessPlant>` as an arbitrary concrete subclass.

   .. image:: /diagrams/diagram740.*


   .. admonition:: proteus-example
   
      
      .. code-block:: xml
      
        <PlantStructureItem
            ID="processPlant1"
            ComponentClass="ProcessPlant"
            ComponentClassURI="http://data.posccaesar.org/rdl/RDS7151859" DOTS123="DOTS123">
          ...
        </PlantStructureItem>
      

