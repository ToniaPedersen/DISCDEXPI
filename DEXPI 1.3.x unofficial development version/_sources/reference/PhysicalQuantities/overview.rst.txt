========
Overview
========

The :doc:`PhysicalQuantities </reference/PhysicalQuantities/index>` package provides data types to represent physical quantities such as the *area* of a surface or the *frequency* of a repeating event.

In DEXPI, there is a distinction between two types of physical quantities: *simple physical quantity types* and *application-dependent physical quantity types*.

.. _dexpi-concept-simple-physical-quantity-type:

Simple Physical Quantity Types
==============================

Simple physical quantity types are characterized by a :ref:`physical dimension <dexpi-glossary-physical-dimension>`, e.g., L\ :sup:`2` in case of *area*, and a set of units of measurement, e.g., m\ :sup:`2` (meter squared), cm\ :sup:`2` (centimeter squared) and some more for *area*.

For illustration, we discuss the information model for *area*:

.. image:: /diagrams/diagram10.*



.. image:: /diagrams/diagram11.*



- The data type :doc:`NullableArea </reference/PhysicalQuantities/NullableArea>` is abstract. It has two concrete sub types: :doc:`Area </reference/PhysicalQuantities/Area>` is used for :ref:`actual <dexpi-concept-actual-value>` *area* values, and :doc:`NullArea </reference/PhysicalQuantities/NullArea>` is the type of the explicit :ref:`null <dexpi-concept-null-value>` value :doc:`NULL_AREA </reference/PhysicalQuantities/NULL_AREA>`.

- An :doc:`Area </reference/PhysicalQuantities/Area>` has a mandatory numerical :ref:`Value <dexpi-PhysicalQuantities-Area-Value>` of type :doc:`Double </reference/DataTypes/Double>`. The mandatory :ref:`Unit <dexpi-PhysicalQuantities-Area-Unit>` is one of the literals of the enumeration :doc:`AreaUnit </reference/PhysicalQuantities/AreaUnit>`, for example :ref:`MetreSquared <dexpi-PhysicalQuantities-AreaUnit-MetreSquared>`.

- Like any enumeration literal in DEXPI, a literal for a unit of measurement has a :ref:`symbol <dexpi-concept-literal-symbol>`, e.g., m\ :sup:`2` in case of :ref:`MetreSquared <dexpi-PhysicalQuantities-AreaUnit-MetreSquared>`. In addition, it is identified by a :ref:`UN Code <dexpi-glossary-un-code>`. For example, the UN Code of :ref:`MetreSquared <dexpi-PhysicalQuantities-AreaUnit-MetreSquared>` is MTK.

There are 12 simple physical quantity types:

* :doc:`NullableArea </reference/PhysicalQuantities/NullableArea>`

* :doc:`NullableForce </reference/PhysicalQuantities/NullableForce>`

* :doc:`NullableHeatTransferCoefficient </reference/PhysicalQuantities/NullableHeatTransferCoefficient>`

* :doc:`NullableLength </reference/PhysicalQuantities/NullableLength>`

* :doc:`NullableMass </reference/PhysicalQuantities/NullableMass>`

* :doc:`NullableMassFlowRate </reference/PhysicalQuantities/NullableMassFlowRate>`

* :doc:`NullablePercentage </reference/PhysicalQuantities/NullablePercentage>`

* :doc:`NullablePower </reference/PhysicalQuantities/NullablePower>`

* :doc:`NullableTemperature </reference/PhysicalQuantities/NullableTemperature>`

* :doc:`NullableVoltage </reference/PhysicalQuantities/NullableVoltage>`

* :doc:`NullableVolume </reference/PhysicalQuantities/NullableVolume>`

* :doc:`NullableVolumeFlowRate </reference/PhysicalQuantities/NullableVolumeFlowRate>`




.. _dexpi-concept-application-dependent-physical-quantity-type:

Application-Dependent Physical Quantity Types
=============================================

An application-dependent physical quantity type such as *pressure* is characterized by a :ref:`physical dimension <dexpi-glossary-physical-dimension>`, e.g., L\ :sup:`-1`\ MT\ :sup:`-2`. For an application-dependent physical quantity type, there are specializations that are intended for different application areas. These application areas may have different physical or technical meanings. The allowed units of measurement may also differ among the application areas. For example, in case of *pressure*, DEXPI distinguishes between an *absolute pressure* and a *gauge pressure*.

To illustrate the information model for application-dependent physical quantity types, we consider *pressure*:

.. image:: /diagrams/diagram12.*



.. image:: /diagrams/diagram13.*



.. image:: /diagrams/diagram14.*



- The abstract data type :doc:`NullablePressure </reference/PhysicalQuantities/NullablePressure>` has two abstract sub types that correspond to the two application areas: :doc:`NullablePressureAbsolute </reference/PhysicalQuantities/NullablePressureAbsolute>` and :doc:`NullablePressureGauge </reference/PhysicalQuantities/NullablePressureGauge>`.

- Each application area is modeled in the same way as a :ref:`simple physical quantity type <dexpi-concept-simple-physical-quantity-type>`. For example, :doc:`NullablePressureAbsolute </reference/PhysicalQuantities/NullablePressureAbsolute>` has a concrete sub type  :doc:`PressureAbsolute </reference/PhysicalQuantities/PressureAbsolute>` for :ref:`actual <dexpi-concept-actual-value>` *absolute pressure* values. Another concrete sub type is :doc:`NullPressureAbsolute </reference/PhysicalQuantities/NullPressureAbsolute>`, a singleton type whose instance :doc:`NULL_PRESSURE_ABSOLUTE </reference/PhysicalQuantities/NULL_PRESSURE_ABSOLUTE>` is a :ref:`null  <dexpi-concept-null-value>` value.

- A :doc:`PressureAbsolute </reference/PhysicalQuantities/PressureAbsolute>` has a mandatory numerical :ref:`Value <dexpi-PhysicalQuantities-PressureAbsolute-Value>` of type :doc:`Double </reference/DataTypes/Double>` and a mandatory :ref:`Unit <dexpi-PhysicalQuantities-PressureAbsolute-Unit>` of type :doc:`PressureAbsoluteUnit </reference/PhysicalQuantities/PressureAbsoluteUnit>`.

- Each enumeration literal of :doc:`PressureAbsoluteUnit </reference/PhysicalQuantities/PressureAbsoluteUnit>` has a :ref:`symbol <dexpi-concept-literal-symbol>` and is identified by a :ref:`UN Code <dexpi-glossary-un-code>`. For example, in case of :ref:`Bar <dexpi-PhysicalQuantities-PressureAbsoluteUnit-Bar>` the symbol is bar and the UN Code is BAR.

Note that the literals of :doc:`PressureAbsoluteUnit </reference/PhysicalQuantities/PressureAbsoluteUnit>` of :doc:`PressureGaugeUnit </reference/PhysicalQuantities/PressureGaugeUnit>` have the same names, symbols, and UN Codes. From a user's perspective, this means that the same units can be used for an *absolute pressure* and for a *gauge pressure*. From the model's perspective, these are still distinct literals.

See the unit enumerations for the application areas of *frequency* for the case when the allowed units actually depend on the application area. For example, :doc:`ElectricalFrequencyUnit </reference/PhysicalQuantities/ElectricalFrequencyUnit>` contains the literal :ref:`Hertz <dexpi-PhysicalQuantities-ElectricalFrequencyUnit-Hertz>`, whereas :doc:`RotationalFrequencyUnit </reference/PhysicalQuantities/RotationalFrequencyUnit>` and :doc:`NumberPerTimeIntervalUnit </reference/PhysicalQuantities/NumberPerTimeIntervalUnit>` have no literal with name Hertz.

There are 2 application-dependent physical quantity types:

* :doc:`NullableFrequency </reference/PhysicalQuantities/NullableFrequency>`

* :doc:`NullablePressure </reference/PhysicalQuantities/NullablePressure>`




